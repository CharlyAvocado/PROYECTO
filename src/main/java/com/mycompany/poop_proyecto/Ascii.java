/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.poop_proyecto;

/**
 *
 * @author ApertureSolutions
 */
public class Ascii {
    /**
     * Esta clase se encarga de imprimir los mensajes en ASCII
     * */
    public void Aperture(){
         String[] Aperture={
"\t\t\t    ___    ____  __________  ________  ______  ______   \n" +
"\t\t\t   /   |  / __ \\/ ____/ __ \\/_  __/ / / / __ \\/ ____/   \n" +
"\t\t\t  / /| | / /_/ / __/ / /_/ / / / / / / / /_/ / __/      \n" +
"\t\t\t / ___ |/ ____/ /___/ _, _/ / / / /_/ / _, _/ /___      \n" +
"\t\t\t/_/__|_/_/___/_____/_/_|_|_/_/__\\____/_/_|_/_____/____  \n" +
"\t\t\t  / ___// __ \\/ /   / / / /_  __/  _/ __ \\/ | / / ___/  \n" +
"\t\t\t  \\__ \\/ / / / /   / / / / / /  / // / / /  |/ /\\__ \\   \n" +
"\t\t\t ___/ / /_/ / /___/ /_/ / / / _/ // /_/ / /|  /___/ /   \n" +
"\t\t\t/____/\\____/_____/\\____/ /_/ /___/\\____/_/ |_//____/    \n" +
"                                                        "};
         for (int i = 0; i < Aperture.length; i++) {
            System.out.println(Aperture[i]);
            
        }
     
    }
    public void Admin(){
        String[] Admin={
"\t     _     ____   __  __  ___  _   _  ___  ____  _____   _     ____  ___  ___   _   _  \n" +
"\t    / \\   |  _ \\ |  \\/  ||_ _|| \\ | ||_ _|/ ___||_   _| / \\   / ___||_ _|/ _ \\ | \\ | | \n" +
"\t   / _ \\  | | | || |\\/| | | | |  \\| | | | \\___ \\  | |  / _ \\ | |     | || | | ||  \\| | \n" +
"\t  / ___ \\ | |_| || |  | | | | | |\\  | | |  ___) | | | / ___ \\| |___  | || |_| || |\\  | \n" +
"\t /_/   \\_\\|____/ |_|  |_||___||_| \\_||___||____/  |_|/_/   \\_\\\\____||___|\\___/ |_| \\_| \n" +
"\t                  _____  ____    ____  ___   _         _     ____                      \n" +
"\t                 | ____|/ ___|  / ___|/ _ \\ | |       / \\   |  _ \\                     \n" +
"\t                 |  _|  \\___ \\ | |   | | | || |      / _ \\  | |_) |                    \n" +
"\t                 | |___  ___) || |___| |_| || |___  / ___ \\ |  _ <                     \n" +
"\t                 |_____||____/  \\____|\\___/ |_____|/_/   \\_\\|_| \\_\\                    \n" +
"                                                                                       "
        };
        for (int i = 0; i < Admin.length; i++) {
            System.out.println(Admin[i]);
            
        }
    }
    public void Bye(){
        String[] Adios={
"\t\t\t  _   _     _     ____  _____   _     \n" +
"\t\t\t | | | |   / \\   / ___||_   _| / \\    \n" +
"\t\t\t | |_| |  / _ \\  \\___ \\  | |  / _ \\   \n" +
"\t\t\t |  _  | / ___ \\  ___) | | | / ___ \\  \n" +
"\t\t\t |_| |_|/_/   \\_\\|____/  |_|/_/   \\_\\ \n" +
"\t\t\t    _     _   _  _____  ____   ___    \n" +
"\t\t\t   | |   | | | || ____|/ ___| / _ \\   \n" +
"\t\t\t   | |   | | | ||  _| | |  _ | | | |  \n" +
"\t\t\t   | |___| |_| || |___| |_| || |_| |  \n" +
"\t\t\t   |_____|\\___/ |_____|\\____| \\___/   \n" +
"                                     "};
        for (int i = 0; i < Adios.length; i++) {
            System.out.println(Adios[i]);
            
        }
    }
    public void Solutions(){
                String[] AS={
                    "                                              ///                                              \n" +
"                                 //////////////////////////////                                \n" +
"                           ////     //////////////////////////////                             \n" +
"                      ////////////,    ////////////////////////////   ////                     \n" +
"                   ///////////////////     ////////////////////////   ///////                  \n" +
"                //////////////////////////    //////////////////////   /////////               \n" +
"             ////////////////////////////////     //////////////////   ////////////            \n" +
"           //////////////////////////////////////     //////////////,  ,/////////////          \n" +
"         ////////////////////////////////////            ////////////   ///////////////        \n" +
"        ////////////////////////                             ////////   ////////////////       \n" +
"      ////////////                                              */////   /////////////////     \n" +
"                    ////////                                        //   //////////////////    \n" +
"      ////////////////////*                                               //////////////////   \n" +
"   //////////////////////                                                 ////////////////     \n" +
"  /////////////////////                                                   */////////////   /// \n" +
"  ///////////////////                                                      ///////////   ///// \n" +
" ///////////////////                                                       //////////   ///////\n" +
" /////////////////                                                          ///////   /////////\n" +
" ///////////////                                                            /////   ///////////\n" +
" /////////////   */                                                          //   /////////////\n" +
" ////////////   ////                                                             //////////////\n" +
" //////////   //////                                                           ////////////////\n" +
" ////////   /////////                                                        //////////////////\n" +
"  /////    //////////                                                      ,////////////////// \n" +
"  ////   ////////////*                                                    //////////////////// \n" +
"   /   ///////////////                                                  /////////////////////  \n" +
"      ////////////////,                                               //////////////////////   \n" +
"     //////////////////   /                                          ////////////              \n" +
"      /////////////////.  /////                                    /             /////////     \n" +
"        ////////////////   ///////                                  ////////////////////       \n" +
"         ///////////////   ///////////                 ////////////////////////////////        \n" +
"           //////////////   //////////////     //////////////////////////////////////          \n" +
"             ////////////   /////////////////     ////////////////////////////////*            \n" +
"                //////////   ////////////////////     //////////////////////////               \n" +
"                   ///////   ////////////////////////    ////////////////////                  \n" +
"                      *////   ///////////////////////////    ////////////.                     \n" +
"                              //////////////////////////////     ////                          \n" +
"                                 //////////////////////////////                                "
            };
                for (int i = 0; i < AS.length; i++) {
                    System.out.println(AS[i]);
                }
                
    }
    public void separador(){
               System.out.println(
                    "                                                                                                                                                                                                        \n" +
"                                                                                                                                                                                                        \n" +
"                                                                                                                                                                                                        \n" +
"                                                                                                                                                                                                        \n" +
" _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______ _______\n" +
"                                                                                                                                                                                                        \n" +
"                                                                                                                                                                                                        \n" +
"                                                                                                                                                                                                        ");
                                       
    }
}
